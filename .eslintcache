[{"/home/jonganebski/github/nodcast-front/src/index.tsx":"1","/home/jonganebski/github/nodcast-front/src/apollo.ts":"2","/home/jonganebski/github/nodcast-front/src/constants.ts":"3","/home/jonganebski/github/nodcast-front/src/routers/logged-in-router.tsx":"4","/home/jonganebski/github/nodcast-front/src/routers/logged-out-router.tsx":"5","/home/jonganebski/github/nodcast-front/src/pages/Home.tsx":"6","/home/jonganebski/github/nodcast-front/src/pages/Auth.tsx":"7","/home/jonganebski/github/nodcast-front/src/__generated__/globalTypes.ts":"8","/home/jonganebski/github/nodcast-front/src/components/FormError.tsx":"9","/home/jonganebski/github/nodcast-front/src/components/Header.tsx":"10","/home/jonganebski/github/nodcast-front/src/pages/Podcast.tsx":"11","/home/jonganebski/github/nodcast-front/src/helpers.ts":"12","/home/jonganebski/github/nodcast-front/src/components/App.tsx":"13","/home/jonganebski/github/nodcast-front/src/components/PodcastBlock.tsx":"14","/home/jonganebski/github/nodcast-front/src/components/PodcastBlockSkeleton.tsx":"15","/home/jonganebski/github/nodcast-front/src/components/EpisodeBlock.tsx":"16","/home/jonganebski/github/nodcast-front/src/components/EpisodeBlockSkeleton.tsx":"17","/home/jonganebski/github/nodcast-front/src/hooks/useSearchPodcastsQuery.tsx":"18","/home/jonganebski/github/nodcast-front/src/hooks/useMeQuery.tsx":"19","/home/jonganebski/github/nodcast-front/src/pages/Hosts/Home.tsx":"20","/home/jonganebski/github/nodcast-front/src/components/CategorySection.tsx":"21","/home/jonganebski/github/nodcast-front/src/components/Button.tsx":"22","/home/jonganebski/github/nodcast-front/src/components/ReviewsDrawer.tsx":"23","/home/jonganebski/github/nodcast-front/src/components/RatingStars.tsx":"24","/home/jonganebski/github/nodcast-front/src/components/ReviewBlock.tsx":"25","/home/jonganebski/github/nodcast-front/src/hooks/useGetReviewsQuery.tsx":"26","/home/jonganebski/github/nodcast-front/src/components/ReviewForm.tsx":"27","/home/jonganebski/github/nodcast-front/src/components/EditProfileModal.tsx":"28","/home/jonganebski/github/nodcast-front/src/components/AuthFormInputs.tsx":"29","/home/jonganebski/github/nodcast-front/src/pages/Subscriptions.tsx":"30","/home/jonganebski/github/nodcast-front/src/fragments.ts":"31","/home/jonganebski/github/nodcast-front/src/pages/Feeds.tsx":"32","/home/jonganebski/github/nodcast-front/src/components/PodcastCover.tsx":"33","/home/jonganebski/github/nodcast-front/src/pages/Episode.tsx":"34","/home/jonganebski/github/nodcast-front/src/hooks/useGetPodcastQuery.tsx":"35","/home/jonganebski/github/nodcast-front/src/components/PodcastForm.tsx":"36","/home/jonganebski/github/nodcast-front/src/hooks/mutations/useCreatePodcastMutation.tsx":"37","/home/jonganebski/github/nodcast-front/src/pages/Hosts/Episodes.tsx":"38","/home/jonganebski/github/nodcast-front/src/hooks/mutations/useCreateEpisodeMutation.tsx":"39","/home/jonganebski/github/nodcast-front/src/hooks/queries/useGetEpisodesQuery.tsx":"40","/home/jonganebski/github/nodcast-front/src/components/EpisodeForm.tsx":"41","/home/jonganebski/github/nodcast-front/src/hooks/mutations/useEditEpisodeMutation.tsx":"42","/home/jonganebski/github/nodcast-front/src/api/uploadFile.ts":"43","/home/jonganebski/github/nodcast-front/src/components/ButtonWide.tsx":"44","/home/jonganebski/github/nodcast-front/src/components/Alert.tsx":"45","/home/jonganebski/github/nodcast-front/src/hooks/mutations/useDeleteEpisodeMutation.tsx":"46","/home/jonganebski/github/nodcast-front/src/pages/Hosts/EditPodcast.tsx":"47","/home/jonganebski/github/nodcast-front/src/components/AudioPlayer.tsx":"48","/home/jonganebski/github/nodcast-front/src/contexts/audioPlayerContext.tsx":"49","/home/jonganebski/github/nodcast-front/src/hooks/mutations/useEditPodcastMutation.tsx":"50","/home/jonganebski/github/nodcast-front/src/components/Avatar.tsx":"51"},{"size":509,"mtime":1613114310462,"results":"52","hashOfConfig":"53"},{"size":978,"mtime":1613033528986,"results":"54","hashOfConfig":"53"},{"size":1953,"mtime":1613033541706,"results":"55","hashOfConfig":"53"},{"size":1965,"mtime":1613081807590,"results":"56","hashOfConfig":"53"},{"size":371,"mtime":1612957810995,"results":"57","hashOfConfig":"53"},{"size":1728,"mtime":1612944094895,"results":"58","hashOfConfig":"53"},{"size":6322,"mtime":1612934377145,"results":"59","hashOfConfig":"53"},{"size":2084,"mtime":1613115355962,"results":"60","hashOfConfig":"53"},{"size":220,"mtime":1612315663360,"results":"61","hashOfConfig":"53"},{"size":6096,"mtime":1613117244512,"results":"62","hashOfConfig":"53"},{"size":9376,"mtime":1612962109905,"results":"63","hashOfConfig":"53"},{"size":2343,"mtime":1613100975080,"results":"64","hashOfConfig":"53"},{"size":396,"mtime":1612312337810,"results":"65","hashOfConfig":"53"},{"size":1120,"mtime":1612950375725,"results":"66","hashOfConfig":"53"},{"size":353,"mtime":1612945663355,"results":"67","hashOfConfig":"53"},{"size":4140,"mtime":1613101251300,"results":"68","hashOfConfig":"53"},{"size":935,"mtime":1612954167565,"results":"69","hashOfConfig":"53"},{"size":572,"mtime":1612833882690,"results":"70","hashOfConfig":"53"},{"size":350,"mtime":1613115350292,"results":"71","hashOfConfig":"53"},{"size":5522,"mtime":1613106736970,"results":"72","hashOfConfig":"53"},{"size":2271,"mtime":1612844418650,"results":"73","hashOfConfig":"53"},{"size":1484,"mtime":1613101214830,"results":"74","hashOfConfig":"53"},{"size":6152,"mtime":1613015817420,"results":"75","hashOfConfig":"53"},{"size":3613,"mtime":1612962150275,"results":"76","hashOfConfig":"53"},{"size":4377,"mtime":1613015791400,"results":"77","hashOfConfig":"53"},{"size":1050,"mtime":1613015109710,"results":"78","hashOfConfig":"53"},{"size":1200,"mtime":1612917407790,"results":"79","hashOfConfig":"53"},{"size":6807,"mtime":1613116611482,"results":"80","hashOfConfig":"53"},{"size":3664,"mtime":1612935054965,"results":"81","hashOfConfig":"53"},{"size":1681,"mtime":1612953355155,"results":"82","hashOfConfig":"53"},{"size":903,"mtime":1613112292082,"results":"83","hashOfConfig":"53"},{"size":1199,"mtime":1612955300645,"results":"84","hashOfConfig":"53"},{"size":673,"mtime":1613104536210,"results":"85","hashOfConfig":"53"},{"size":2228,"mtime":1613040284516,"results":"86","hashOfConfig":"53"},{"size":779,"mtime":1613112327772,"results":"87","hashOfConfig":"53"},{"size":5220,"mtime":1613112613252,"results":"88","hashOfConfig":"53"},{"size":2079,"mtime":1613102300580,"results":"89","hashOfConfig":"53"},{"size":4478,"mtime":1613099869250,"results":"90","hashOfConfig":"53"},{"size":1715,"mtime":1613099224020,"results":"91","hashOfConfig":"53"},{"size":531,"mtime":1613099639090,"results":"92","hashOfConfig":"53"},{"size":7285,"mtime":1613101327500,"results":"93","hashOfConfig":"53"},{"size":1127,"mtime":1613049605136,"results":"94","hashOfConfig":"53"},{"size":407,"mtime":1613044786746,"results":"95","hashOfConfig":"53"},{"size":807,"mtime":1613105488320,"results":"96","hashOfConfig":"53"},{"size":1857,"mtime":1613055120226,"results":"97","hashOfConfig":"53"},{"size":812,"mtime":1613052214956,"results":"98","hashOfConfig":"53"},{"size":3015,"mtime":1613114574922,"results":"99","hashOfConfig":"53"},{"size":4464,"mtime":1613101029300,"results":"100","hashOfConfig":"53"},{"size":1119,"mtime":1613100753610,"results":"101","hashOfConfig":"53"},{"size":1570,"mtime":1613114536642,"results":"102","hashOfConfig":"53"},{"size":897,"mtime":1613116350402,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"11prm6r",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/home/jonganebski/github/nodcast-front/src/index.tsx",[],["215","216"],"/home/jonganebski/github/nodcast-front/src/apollo.ts",[],"/home/jonganebski/github/nodcast-front/src/constants.ts",[],"/home/jonganebski/github/nodcast-front/src/routers/logged-in-router.tsx",[],"/home/jonganebski/github/nodcast-front/src/routers/logged-out-router.tsx",[],"/home/jonganebski/github/nodcast-front/src/pages/Home.tsx",[],"/home/jonganebski/github/nodcast-front/src/pages/Auth.tsx",[],"/home/jonganebski/github/nodcast-front/src/__generated__/globalTypes.ts",[],"/home/jonganebski/github/nodcast-front/src/components/FormError.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/Header.tsx",["217","218"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { isLoggedInVar } from \"../apollo\";\nimport { TOKEN_NAME } from \"../constants\";\nimport { useSearchPodcastsQuery } from \"../hooks/useSearchPodcastsQuery\";\nimport { UserRole } from \"../__generated__/globalTypes\";\nimport { meQuery_me } from \"../__generated__/meQuery\";\nimport { Avatar } from \"./Avatar\";\nimport { EditProfileModal } from \"./EditProfileModal\";\n\ninterface IHeaderProps {\n  me: meQuery_me | undefined;\n}\n\nexport const Header: React.FC<IHeaderProps> = ({ me }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isEditProfileOpen, setIsEditProfileOpen] = useState(false);\n  const timeoutIdRef = useRef<any>();\n  const ulRef = useRef<HTMLUListElement | null>(null);\n  const [isUserPopup, setIsUserPopup] = useState(false);\n  const history = useHistory();\n  const [searchPodcastsQuery, { data, loading }] = useSearchPodcastsQuery();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setSearchTerm(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    const hide = () => {\n      setShowSearchResults(false);\n      setIsUserPopup(false);\n    };\n    document.addEventListener(\"click\", hide);\n    return () => document.removeEventListener(\"click\", hide);\n  }, []);\n\n  useEffect(() => {\n    if (2 < searchTerm.length) {\n      setShowSearchResults(true);\n    } else {\n      setShowSearchResults(false);\n    }\n  }, [searchTerm.length]);\n\n  useEffect(() => {\n    if (2 < searchTerm.length) {\n      clearTimeout(timeoutIdRef.current);\n      timeoutIdRef.current = setTimeout(() => {\n        searchPodcastsQuery({\n          variables: { input: { page: 1, titleQuery: searchTerm } },\n        });\n      }, 1000);\n    }\n  }, [searchPodcastsQuery, searchTerm]);\n\n  return (\n    <header\n      className=\"py-2 w-full grid place-items-center\"\n      style={{ gridTemplateColumns: \"1fr 8fr 1fr\" }}\n    >\n      <div></div>\n      <div className=\"relative w-full max-w-screen-md\">\n        {me?.role === UserRole.Listener && (\n          <input\n            className=\"p-3 outline-none bg-gray-100 w-full rounded-md focus:shadow-md focus:bg-white transition-all pointer-events-auto\"\n            style={{ pointerEvents: \"all\" }}\n            placeholder=\"Search podcast\"\n            onChange={onChange}\n            value={searchTerm}\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowSearchResults(true);\n            }}\n          />\n        )}\n        {showSearchResults && (\n          <ul\n            className=\"grid absolute border rounded-b-md overflow-hidden w-full gap-px bg-gray-200 shadow-md\"\n            ref={ulRef}\n          >\n            {data?.searchPodcasts.podcasts?.map((podcast) => {\n              return (\n                <li\n                  className=\"p-3 flex justify-between bg-transparent w-full cursor-pointer bg-white hover:bg-gray-100\"\n                  onClick={() => {\n                    setSearchTerm(\"\");\n                    history.push(`/podcasts/${podcast.id}`);\n                  }}\n                  key={podcast.id}\n                >\n                  <span className=\"text-gray-700\">{podcast.title}</span>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      <div\n        className=\"relative w-9 h-9 rounded-full flex items-center justify-center bg-gray-600 cursor-pointer overflow-hidden my-3\"\n        onClick={(e) => {\n          e.stopPropagation();\n          setIsUserPopup(!isUserPopup);\n        }}\n      >\n        {me?.avatarUrl ? (\n          <img\n            className=\"w-full h-full object-cover\"\n            src={me.avatarUrl}\n            alt=\"User avatar\"\n          />\n        ) : (\n          <span className=\"text-white\">{me?.username[0].toUpperCase()}</span>\n        )}\n        {isUserPopup && me && (\n          <ul className=\"absolute z-10 grid gap-px bg-gray-300 top-12 right-0 border rounded-md shadow-lg whitespace-nowrap overflow-hidden text-sm\">\n            <li\n              className=\"px-10 py-3 bg-white hover:bg-gray-100\"\n              onClick={() => history.push(\"/\")}\n            >\n              Home\n            </li>\n            {me.role === UserRole.Listener && (\n              <>\n                <li\n                  className=\"px-10 py-3 bg-white hover:bg-gray-100\"\n                  onClick={() => history.push(\"/feeds\")}\n                >\n                  My feed\n                </li>\n                <li\n                  className=\"px-10 py-3 bg-white hover:bg-gray-100\"\n                  onClick={() => history.push(\"/subscriptions\")}\n                >\n                  Subscriptions\n                </li>\n              </>\n            )}\n            {me.role === UserRole.Host && (\n              <>\n                <li\n                  className=\"px-10 py-3 bg-white hover:bg-gray-100\"\n                  onClick={() => history.push(\"/episodes\")}\n                >\n                  My episodes\n                </li>\n                <li\n                  className=\"px-10 py-3 bg-white hover:bg-gray-100\"\n                  onClick={() => history.push(\"/edit-podcast\")}\n                >\n                  Edit podcast\n                </li>\n              </>\n            )}\n            <li\n              className=\"px-10 py-3 bg-white hover:bg-gray-100\"\n              onClick={() => setIsEditProfileOpen(true)}\n            >\n              Edit profile\n            </li>\n            <li\n              className=\"px-10 py-3 bg-white hover:bg-gray-100\"\n              onClick={() => {\n                localStorage.removeItem(TOKEN_NAME);\n                isLoggedInVar(false);\n                history.go(0);\n              }}\n            >\n              Log out\n            </li>\n          </ul>\n        )}\n      </div>\n      {me && (\n        <EditProfileModal\n          isEditProfileOpen={isEditProfileOpen}\n          setIsEditProfileOpen={setIsEditProfileOpen}\n          me={me}\n        />\n      )}\n    </header>\n  );\n};\n","/home/jonganebski/github/nodcast-front/src/pages/Podcast.tsx",[],"/home/jonganebski/github/nodcast-front/src/helpers.ts",[],"/home/jonganebski/github/nodcast-front/src/components/App.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/PodcastBlock.tsx",["219","220","221"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NICO_URL, LYNN_URL, DEFAULT_COVER } from \"../constants\";\nimport { computeTimelapse } from \"../helpers\";\nimport { getCategoriesQueryListner_getCategories_categories_podcasts } from \"../__generated__/getCategoriesQueryListner\";\nimport { PodcastCover } from \"./PodcastCover\";\n\ninterface IPodcastBlock {\n  podcast: getCategoriesQueryListner_getCategories_categories_podcasts;\n  index: number;\n}\n\nconst src = \"\";\n\nexport const PodcastBlock: React.FC<IPodcastBlock> = ({ podcast, index }) => {\n  return (\n    <li className=\"w-28\">\n      <Link to={`/podcasts/${podcast.id}`}>\n        <PodcastCover coverUrl={src} title={podcast.title} />\n        <h5\n          className=\"text-sm overflow-ellipsis overflow-hidden\"\n          style={{\n            display: \"-webkit-box\",\n            WebkitLineClamp: 2,\n            WebkitBoxOrient: \"vertical\",\n          }}\n        >\n          {podcast.title}\n        </h5>\n        <span className=\"text-xs text-gray-500\">\n          {computeTimelapse(podcast.updatedAt)}\n        </span>\n      </Link>\n    </li>\n  );\n};\n","/home/jonganebski/github/nodcast-front/src/components/PodcastBlockSkeleton.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/EpisodeBlock.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/EpisodeBlockSkeleton.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/useSearchPodcastsQuery.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/useMeQuery.tsx",[],"/home/jonganebski/github/nodcast-front/src/pages/Hosts/Home.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/CategorySection.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/Button.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/ReviewsDrawer.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/RatingStars.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/ReviewBlock.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/useGetReviewsQuery.tsx",["222"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport { client } from \"../apollo\";\nimport { REVIEW_FRAGMENT } from \"../fragments\";\nimport {\n  getReviewsQuery,\n  getReviewsQueryVariables,\n} from \"../__generated__/getReviewsQuery\";\n\nexport const GET_REVIEWS_QUERY = gql`\n  query getReviewsQuery($input: GetReviewsInput!) {\n    getReviews(input: $input) {\n      ok\n      err\n      currentPage\n      totalPages\n      reviews {\n        ...ReviewParts\n      }\n    }\n  }\n  ${REVIEW_FRAGMENT}\n`;\n\nexport const useGetReviewsLazyQuery = (podcastId: number) => {\n  const onCompleted = (data: getReviewsQuery) => {\n    const {\n      getReviews: { ok, reviews, err, currentPage },\n    } = data;\n    if (ok && reviews) {\n      client.writeQuery<getReviewsQuery, getReviewsQueryVariables>({\n        query: GET_REVIEWS_QUERY,\n        data,\n        variables: { input: { podcastId } },\n      });\n    } else {\n      console.log(err);\n    }\n  };\n\n  return useLazyQuery<getReviewsQuery, getReviewsQueryVariables>(\n    GET_REVIEWS_QUERY,\n    { onCompleted }\n  );\n};\n","/home/jonganebski/github/nodcast-front/src/components/ReviewForm.tsx",[],["223","224"],"/home/jonganebski/github/nodcast-front/src/components/EditProfileModal.tsx",["225","226"],"import { gql, useMutation } from \"@apollo/client\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { data } from \"autoprefixer\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { uploadFile } from \"../api/uploadFile\";\nimport { client } from \"../apollo\";\nimport {\n  editProfileMutation,\n  editProfileMutationVariables,\n} from \"../__generated__/editProfileMutation\";\nimport { meQuery_me } from \"../__generated__/meQuery\";\nimport {\n  CheckPasswordInput,\n  EmailInput,\n  PasswordInput,\n  UsernameInput,\n} from \"./AuthFormInputs\";\nimport { Avatar } from \"./Avatar\";\nimport { Button } from \"./Button\";\n\nconst EDIT_PROFILE_MUTATION = gql`\n  mutation editProfileMutation($input: EditProfileInput!) {\n    editProfile(input: $input) {\n      ok\n      err\n    }\n  }\n`;\n\ninterface IFormProps {\n  files: FileList;\n  email: string;\n  username: string;\n  password: string;\n  ckeckPassword: string;\n}\n\ninterface IEditProfileModalProps {\n  isEditProfileOpen: boolean;\n  setIsEditProfileOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  me: meQuery_me;\n}\n\nexport const EditProfileModal: React.FC<IEditProfileModalProps> = ({\n  isEditProfileOpen,\n  setIsEditProfileOpen,\n  me,\n}) => {\n  const [editProfileLoading, setEditProfileLoading] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [src, setSrc] = useState(me.avatarUrl ?? \"\");\n  const f = useForm<IFormProps>({\n    mode: \"onChange\",\n    defaultValues: { email: me.email, username: me.username },\n  });\n\n  const { getValues, reset, handleSubmit, setError } = f;\n\n  useEffect(() => {\n    if (\n      !isEditProfileOpen &&\n      (getValues().email !== me.email || getValues().username !== me.username)\n    ) {\n      reset({ email: me.email, username: me.username });\n    }\n  }, [getValues, isEditProfileOpen, me.email, me.username, reset]);\n\n  const onEditProfileCompleted = (data: editProfileMutation) => {\n    const {\n      editProfile: { ok, err },\n    } = data;\n    if (ok) {\n      const { email, username } = getValues();\n      client.writeFragment<meQuery_me>({\n        id: `Users:${me.id}`,\n        fragment: gql`\n          fragment EditedUser on Users {\n            id\n            email\n            username\n            role\n            subscriptions {\n              id\n            }\n          }\n        `,\n        data: { ...me, email, username },\n      });\n    } else if (err) {\n      if (err.toLowerCase().includes(\"email\")) {\n        setError(\"email\", { message: err });\n      } else if (err.toLowerCase().includes(\"username\")) {\n        setError(\"username\", { message: err });\n      }\n    }\n  };\n\n  const [editProfileMutation] = useMutation<\n    editProfileMutation,\n    editProfileMutationVariables\n  >(EDIT_PROFILE_MUTATION, { onCompleted: onEditProfileCompleted });\n\n  const onSubmit = async () => {\n    setEditProfileLoading(true);\n    const { email, username, password, files } = getValues();\n    let avatarUrl = me.avatarUrl;\n    if (files && files[0]) {\n      try {\n        const formData = new FormData();\n        formData.append(\"file\", files[0]);\n        const { ok, err, url } = await uploadFile(formData);\n        if (ok && url) {\n          avatarUrl = url;\n        } else {\n          console.log(err);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (password) {\n      editProfileMutation({\n        variables: { input: { email, username, password } },\n      });\n    } else {\n      editProfileMutation({\n        variables: { input: { email, username } },\n      });\n    }\n    setEditProfileLoading(false);\n  };\n\n  return (\n    <>\n      <div\n        className={`fixed z-10 top-0 left-0 bg-gray-700 w-full h-full transition-all duration-500 ${\n          isEditProfileOpen\n            ? \"opacity-40 cursor-pointer\"\n            : \"opacity-0 pointer-events-none\"\n        }`}\n        onClick={() => setIsEditProfileOpen(false)}\n      />\n      <section\n        className={`fixed z-20 top-48 left-1/2 transform -translate-x-1/2 bg-white p-4 rounded-lg grid gap-y-4 place-items-center transition-all duration-500 ${\n          isEditProfileOpen ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n        }`}\n      >\n        <FontAwesomeIcon\n          className=\"absolute top-4 right-4 cursor-pointer text-gray-400 hover:text-gray-600\"\n          onClick={() => setIsEditProfileOpen(false)}\n          icon={faTimes}\n        />\n        <h2 className=\"font-semibold text-lg\">Edit profile</h2>\n        <FormProvider {...f}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"grid gap-y-2 mb-4\">\n              <div className=\"flex justify-center\">\n                <Avatar\n                  me={me}\n                  src={src}\n                  size={14}\n                  onClick={() => {\n                    if (fileInputRef.current) {\n                      fileInputRef.current.click();\n                    }\n                  }}\n                />\n                <input\n                  className=\"hidden\"\n                  ref={(ref) => {\n                    f.register(ref);\n                    fileInputRef.current = ref;\n                  }}\n                  name=\"files\"\n                  type=\"file\"\n                  multiple={false}\n                  accept=\"image/jpeg, image/jpg\"\n                  onChange={(e) => {\n                    const files = e.currentTarget.files;\n                    if (files && files[0]) {\n                      const file = files[0];\n                      const reader = new FileReader();\n                      reader.onload = (e) => {\n                        const result = e.target?.result;\n                        if (result && typeof result === \"string\") {\n                          setSrc(result);\n                        }\n                      };\n                      reader.readAsDataURL(file);\n                    } else {\n                      setSrc(me.avatarUrl ?? \"\");\n                    }\n                  }}\n                />\n              </div>\n              <EmailInput />\n              <UsernameInput />\n            </div>\n            <div className=\"grid gap-y-2 mb-4\">\n              <h4 className=\"text-sm text-gray-600\">\n                Leave empty if you don't want to change password\n              </h4>\n              <PasswordInput isEditMode={true} />\n              <CheckPasswordInput isEditMode={true} />\n            </div>\n            <div className=\"flex justify-end\">\n              <Button\n                text=\"Update\"\n                disabled={editProfileLoading}\n                loading={editProfileLoading}\n              />\n            </div>\n          </form>\n        </FormProvider>\n      </section>\n    </>\n  );\n};\n","/home/jonganebski/github/nodcast-front/src/components/AuthFormInputs.tsx",[],"/home/jonganebski/github/nodcast-front/src/pages/Subscriptions.tsx",[],"/home/jonganebski/github/nodcast-front/src/fragments.ts",[],"/home/jonganebski/github/nodcast-front/src/pages/Feeds.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/PodcastCover.tsx",[],"/home/jonganebski/github/nodcast-front/src/pages/Episode.tsx",["227","228"],"import { gql, useQuery } from \"@apollo/client\";\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Button } from \"../components/Button\";\nimport { PodcastCover } from \"../components/PodcastCover\";\nimport { EPISODE_FRAGMENT } from \"../fragments\";\nimport { computeTimelapse, shapeAudioDuration } from \"../helpers\";\nimport { useMeQuery } from \"../hooks/useMeQuery\";\nimport {\n  getEpisodeQuery,\n  getEpisodeQueryVariables,\n} from \"../__generated__/getEpisodeQuery\";\nimport { UserRole } from \"../__generated__/globalTypes\";\n\nconst GET_EPISODE_QUERY = gql`\n  query getEpisodeQuery($input: GetEpisodeInput!) {\n    getEpisode(input: $input) {\n      ok\n      err\n      episode {\n        ...EpisodeParts\n        podcast {\n          id\n          title\n        }\n      }\n    }\n  }\n  ${EPISODE_FRAGMENT}\n`;\n\ninterface IParams {\n  episodeId: string;\n}\n\nexport const Episode = () => {\n  const { episodeId } = useParams<IParams>();\n  const { data } = useQuery<getEpisodeQuery, getEpisodeQueryVariables>(\n    GET_EPISODE_QUERY,\n    { variables: { input: { episodeId: +episodeId } } }\n  );\n\n  return (\n    <main className=\"container\">\n      <section className=\"flex mb-10\">\n        <PodcastCover coverUrl=\"\" title=\"\" size={12} />\n        <div className=\"ml-5\">\n          <h2 className=\"text-blue-600 cursor-pointer hover:underline\">\n            <Link to={`/podcasts/${data?.getEpisode.episode?.podcast.id}`}>\n              {data?.getEpisode.episode?.podcast.title}\n            </Link>\n          </h2>\n          <span className=\"text-sm text-gray-500\">\n            {computeTimelapse(data?.getEpisode.episode?.createdAt)}\n          </span>\n        </div>\n      </section>\n      <section>\n        <h3 className=\" mb-4 text-lg font-semibold\">\n          {data?.getEpisode.episode?.title}\n        </h3>\n        <Button\n          text={`Play • ${shapeAudioDuration(\n            data?.getEpisode.episode?.dutationSeconds\n          )}`}\n          icon={faPlayCircle}\n          className=\"mb-8\"\n        />\n        <p className=\"text-sm text-gray-700\">\n          {data?.getEpisode.episode?.description}\n        </p>\n      </section>\n    </main>\n  );\n};\n","/home/jonganebski/github/nodcast-front/src/hooks/useGetPodcastQuery.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/PodcastForm.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/mutations/useCreatePodcastMutation.tsx",[],"/home/jonganebski/github/nodcast-front/src/pages/Hosts/Episodes.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/mutations/useCreateEpisodeMutation.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/queries/useGetEpisodesQuery.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/EpisodeForm.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/mutations/useEditEpisodeMutation.tsx",[],"/home/jonganebski/github/nodcast-front/src/api/uploadFile.ts",[],"/home/jonganebski/github/nodcast-front/src/components/ButtonWide.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/Alert.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/mutations/useDeleteEpisodeMutation.tsx",[],"/home/jonganebski/github/nodcast-front/src/pages/Hosts/EditPodcast.tsx",["229"],"import React, { useEffect, useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { uploadFile } from \"../../api/uploadFile\";\nimport { IPodcastForm, PodcastForm } from \"../../components/PodcastForm\";\nimport { useEditPodcastMutation } from \"../../hooks/mutations/useEditPodcastMutation\";\nimport { useGetPodcastQuery } from \"../../hooks/useGetPodcastQuery\";\n\nexport const EditPodcast = () => {\n  const { data, loading: pageLoading } = useGetPodcastQuery();\n  const history = useHistory();\n  const [src, setSrc] = useState(\"\");\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const formMethods = useForm<IPodcastForm>({\n    mode: \"onChange\",\n  });\n  const { setValue, getValues } = formMethods;\n  const [editPodcastMutation] = useEditPodcastMutation(data?.getPodcast);\n\n  useEffect(() => {\n    const podcast = data?.getPodcast.podcast;\n    const allCategories = data?.getPodcast.categories;\n    if (podcast && allCategories) {\n      setSrc(podcast.coverUrl ?? \"\");\n      setValue(\"title\", podcast.title, { shouldValidate: true });\n      setValue(\"description\", podcast.description);\n      setValue(\n        \"categories\",\n        allCategories.map((category) => {\n          if (podcast.categories.some((c) => c.id === category.id)) {\n            return { id: category.id + \"\" };\n          }\n          return { id: false };\n        }),\n        { shouldValidate: true }\n      );\n    }\n  }, [data?.getPodcast.categories, data?.getPodcast.podcast, setValue]);\n\n  const onSubmit = async () => {\n    if (!data?.getPodcast.podcast) {\n      return;\n    }\n    setSubmitLoading(true);\n    const { title, description, categories, files } = getValues();\n    const file = files?.[0];\n    let coverUrl = data.getPodcast.podcast.coverUrl;\n    if (file) {\n      try {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const { ok, url } = await uploadFile(formData);\n        if (ok && url) {\n          coverUrl = url;\n        } else {\n          throw new Error();\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    const categoryIds = categories.reduce((acc, value) => {\n      if (value.id) {\n        acc.push(+value.id);\n      }\n      return acc;\n    }, [] as number[]);\n    const { errors } = await editPodcastMutation({\n      variables: {\n        input: {\n          podcastId: data?.getPodcast.podcast?.id,\n          title,\n          description,\n          categoryIds,\n          coverUrl,\n        },\n      },\n    });\n    setSubmitLoading(false);\n    if (!errors) {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <main className=\"container\">\n      <FormProvider {...formMethods}>\n        <PodcastForm\n          categories={data?.getPodcast.categories}\n          onSubmit={onSubmit}\n          setSrc={setSrc}\n          src={src}\n          submitLoading={submitLoading}\n          editTarget={data?.getPodcast.podcast}\n        />\n      </FormProvider>\n    </main>\n  );\n};\n","/home/jonganebski/github/nodcast-front/src/components/AudioPlayer.tsx",["230"],"import {\n  faPause,\n  faPlay,\n  faStop,\n  faTimes,\n  faVolumeDown,\n  faVolumeOff,\n  faVolumeUp,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useAudioContext } from \"../contexts/audioPlayerContext\";\nimport { shapeAudioDurationDetail, shapeDurationLeft } from \"../helpers\";\nimport { PodcastCover } from \"./PodcastCover\";\n\nexport const AudioPlayer = () => {\n  const { setTrack, setIsPaused, track, isPaused } = useAudioContext();\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const [volume, setVolume] = useState(0.5);\n  const [audioTime, setAudioTime] = useState(0);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n    if (audioRef.current) {\n      intervalId = setInterval(() => {\n        setAudioTime(audioRef.current!.currentTime);\n      }, 1000);\n      if (isPaused) {\n        clearInterval(intervalId);\n      }\n    }\n    return () => clearInterval(intervalId);\n  }, [isPaused]);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n    }\n  }, [volume]);\n\n  useEffect(() => {\n    if (audioRef.current && track) {\n      if (isPaused) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n    }\n  }, [isPaused, track]);\n\n  const paintVolumeIcon = (): IconDefinition => {\n    const audio = audioRef.current;\n    if (audio) {\n      if (audio.volume === 0) {\n        return faVolumeOff;\n      }\n      if (audio.volume < 0.5) {\n        return faVolumeDown;\n      }\n      return faVolumeUp;\n    }\n    return faVolumeUp;\n  };\n\n  const paintPlayPauseIcon = (): IconDefinition => {\n    if (isPaused) {\n      return faPlay;\n    }\n    return faPause;\n  };\n\n  return (\n    <section\n      className={`fixed z-10 w-full h-20 px-6 grid grid-cols-3 items-center bg-opacity-80 bg-gray-100 transition-all duration-700 ${\n        track ? \"bottom-0 opacity-100\" : \"-bottom-20 opacity-0\"\n      }`}\n      style={{ boxShadow: \"0px 0px 10px 0px rgba(0, 0, 0, 0.1)\" }}\n    >\n      <input\n        className=\"duration-range absolute top-0 w-full h-px cursor-pointer\"\n        type=\"range\"\n        min={0}\n        max={audioRef.current?.duration ? +audioRef.current.duration : 0}\n        value={audioTime}\n        onChange={(e) => {\n          const time = +e.currentTarget.value;\n          if (audioRef.current) {\n            audioRef.current.currentTime = time;\n            setAudioTime(time);\n          }\n        }}\n      />\n      <div className=\"flex items-center\">\n        <PodcastCover\n          coverUrl={track?.coverUrl ?? \"\"}\n          size={12}\n          title={track?.podcastTitle ?? \"\"}\n        />\n        <div className=\"ml-4 text-sm\">\n          <h4 className=\"font-semibold\">{track?.episodeTitle}</h4>\n          <span>{shapeDurationLeft(audioRef)}</span>\n        </div>\n      </div>\n      <div className=\"justify-self-center\">\n        <audio ref={audioRef} src={track?.audioUrl} />\n        <button\n          className=\"w-10 h-10 cursor-pointer rounded-full text-gray-600 text-xl active:bg-gray-200 focus:outline-none\"\n          onClick={() => {\n            if (isPaused) {\n              setIsPaused(false);\n            } else {\n              setIsPaused(true);\n            }\n          }}\n        >\n          <FontAwesomeIcon icon={paintPlayPauseIcon()} />\n        </button>\n        <button\n          className=\"w-10 h-10 cursor-pointer rounded-full text-gray-600 text-xl active:bg-gray-200 focus:outline-none\"\n          onClick={() => {\n            setTrack(null);\n            if (audioRef.current) {\n              audioRef.current.src = \"\";\n            }\n          }}\n        >\n          <FontAwesomeIcon icon={faStop} />\n        </button>\n      </div>\n      <div className=\"flex items-center justify-end\">\n        <div className=\"w-8\">\n          <FontAwesomeIcon icon={paintVolumeIcon()} />\n        </div>\n        <input\n          className=\"mr-4 h-1 cursor-pointer\"\n          type=\"range\"\n          min={0}\n          max={1}\n          step={0.05}\n          value={volume}\n          onChange={(e) => {\n            setVolume(+e.currentTarget.value);\n          }}\n        />\n        <span className=\"text-xs text-gray-600 font-semibold\">\n          {shapeAudioDurationDetail(audioRef.current?.currentTime)} /{\" \"}\n          {shapeAudioDurationDetail(audioRef.current?.duration)}\n        </span>\n      </div>\n    </section>\n  );\n};\n","/home/jonganebski/github/nodcast-front/src/contexts/audioPlayerContext.tsx",[],"/home/jonganebski/github/nodcast-front/src/hooks/mutations/useEditPodcastMutation.tsx",[],"/home/jonganebski/github/nodcast-front/src/components/Avatar.tsx",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":16},{"ruleId":"235","severity":1,"message":"239","line":23,"column":39,"nodeType":"237","messageId":"238","endLine":23,"endColumn":46},{"ruleId":"235","severity":1,"message":"240","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":18},{"ruleId":"235","severity":1,"message":"241","line":3,"column":20,"nodeType":"237","messageId":"238","endLine":3,"endColumn":28},{"ruleId":"235","severity":1,"message":"242","line":3,"column":30,"nodeType":"237","messageId":"238","endLine":3,"endColumn":43},{"ruleId":"235","severity":1,"message":"243","line":27,"column":39,"nodeType":"237","messageId":"238","endLine":27,"endColumn":50},{"ruleId":"231","replacedBy":"244"},{"ruleId":"233","replacedBy":"245"},{"ruleId":"235","severity":1,"message":"246","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":14},{"ruleId":"235","severity":1,"message":"247","line":115,"column":11,"nodeType":"237","messageId":"238","endLine":115,"endColumn":20},{"ruleId":"235","severity":1,"message":"248","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":20},{"ruleId":"235","severity":1,"message":"249","line":14,"column":10,"nodeType":"237","messageId":"238","endLine":14,"endColumn":18},{"ruleId":"235","severity":1,"message":"250","line":10,"column":26,"nodeType":"237","messageId":"238","endLine":10,"endColumn":37},{"ruleId":"235","severity":1,"message":"251","line":5,"column":3,"nodeType":"237","messageId":"238","endLine":5,"endColumn":10},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"@typescript-eslint/no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'NICO_URL' is defined but never used.","'LYNN_URL' is defined but never used.","'DEFAULT_COVER' is defined but never used.","'currentPage' is assigned a value but never used.",["252"],["253"],"'data' is defined but never used.","'avatarUrl' is assigned a value but never used.","'useMeQuery' is defined but never used.","'UserRole' is defined but never used.","'pageLoading' is assigned a value but never used.","'faTimes' is defined but never used.","no-global-assign","no-unsafe-negation"]